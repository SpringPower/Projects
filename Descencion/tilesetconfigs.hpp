#ifndef TILESETCONFIGS_HPP
#define TILESETCONFIGS_HPP

#include "tileset.hpp"

typedef enum TILESET_FILE
{
    TILESET_FILE_WEAPONS = 0,
    TILESET_FILE_DUNGEON,
    // Must be last:
    TILESET_FILE_NUM
} TILESET_FILE;

typedef enum TILESET_CONFIG
{
    TILESET_CONFIG_WEAPONS = 0,
    TILESET_CONFIG_ARCH
} TILESET_CONFIG;

typedef enum WEAPON: size_t
{
    WEAPON_NONE = 0,
    WEAPON_SHORTSWORD,
    WEAPON_FALCHION,
    WEAPON_LONGSWORD,
    WEAPON_BASTARD_SWORD,
    WEAPON_ZWEIHANDER,
    WEAPON_KNIFE,
    WEAPON_DIRK,
    WEAPON_DAGGER,
    WEAPON_SHORTBOW,
    WEAPON_LONGBOW,
    WEAPON_RECURVE_BOW,
    WEAPON_SPEAR,
    WEAPON_JAVELIN,
    WEAPON_TRIDENT,
    WEAPON_HANDAXE,
    WEAPON_WARAXE,
    WEAPON_POLEAXE,
    WEAPON_KATANA,
    WEAPON_NUNCHUCK,
    WEAPON_DOUBLE_BLADED,
    WEAPON_MACE,
    WEAPON_CUDGEL,
    WEAPON_CLUB,
    WEAPON_STAFF,
    WEAPON_FLAIL,
    WEAPON_BUCKLER,
    WEAPON_KITE_SHIELD,
    WEAPON_TOWER_SHIELD
} WEAPON;

typedef enum ARCH: size_t
{
    ARCH_WALL_N = 0,
    ARCH_WALL_E,
    ARCH_WALL_S,
    ARCH_WALL_W,
    ARCH_WALL_SE,
    ARCH_WALL_SW,
    ARCH_WALL_NW,
    ARCH_WALL_NE,
    ARCH_WALL_SEW,
    ARCH_WALL_NSW,
    ARCH_WALL_NEW,
    ARCH_WALL_NSE,
    ARCH_WALL_EW,
    ARCH_WALL_NS,
    ARCH_WALL_NSEW,
    ARCH_WALL_NONE
} ARCH;

TilesetConfig
GetTilesetConfig(
    TILESET_CONFIG  eConfig);

ALLEGRO_FILE *
GetTilesetFile(
    TILESET_FILE    eFile);


#endif // TILESETCONFIGS_HPP
